version: v1alpha1 # Indicates the schema used to decode the contents.
debug: false # Enable verbose logging to the console.
persist: true # Indicates whether to pull the machine config upon every boot.
# Provides machine specific configuration options.
machine:
  type: controlplane # Defines the role of the machine within the cluster.
  token: 0kzrjh.8yc83hvb80al12ao # The `token` is used by a machine to join the PKI of the cluster.
  # The root certificate authority of the PKI.
  ca:
    crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQekNCOHFBREFnRUNBaEVBMC9vb0Yza3EyRURub3phcXk5ZDhWREFGQmdNclpYQXdFREVPTUF3R0ExVUUKQ2hNRmRHRnNiM013SGhjTk1qSXdOVEV6TVRjeE9EVXpXaGNOTXpJd05URXdNVGN4T0RVeldqQVFNUTR3REFZRApWUVFLRXdWMFlXeHZjekFxTUFVR0F5dGxjQU1oQU82RUZSbm1tV3c0NlRtZnF4bEZ5RlZteHB4alhVeWRuTzVpCmNWdEhjcXE5bzJFd1h6QU9CZ05WSFE4QkFmOEVCQU1DQW9Rd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUcKQ0NzR0FRVUZCd01DTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkpaRHpXTklMNVpJTkNsUgo1Q01PeFpxTjVteFRNQVVHQXl0bGNBTkJBR05kRUI1QzM2Q2oyVDVYYnpFRVRqSS9TME5JQkZndTdJcFdIZFJLCmR5NlRWYXdNVXhrNWFjcW54ejNNV25rTDlRQWduTjB1djYrUG9XcklOT08xdHdzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    key: LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0KTUM0Q0FRQXdCUVlESzJWd0JDSUVJQ2tockorOHdKNHhpamF1NjlzcUpwS0YwYTR1bzZtbVoxcExZS1FQVnlNSAotLS0tLUVORCBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0K
  # Extra certificate subject alternative names for the machine's certificate.
  certSANs: []
  #   # Uncomment this to enable SANs.
  #   - 10.0.0.10
  #   - 172.16.0.10
  #   - 192.168.0.10

  # Used to provide additional options to the kubelet.
  kubelet:
    image: ghcr.io/siderolabs/kubelet:v1.22.9 # The `image` field is an optional reference to an alternative kubelet image.

    # # The `ClusterDNS` field is an optional reference to an alternative kubelet clusterDNS ip list.
    # clusterDNS:
    #     - 10.96.0.10
    #     - 169.254.2.53

    # # The `extraArgs` field is used to provide additional flags to the kubelet.
    extraArgs:
      rotate-server-certificates: true

    # # The `extraMounts` field is used to add additional mounts to the kubelet container.
    # extraMounts:
    #     - destination: /var/lib/example
    #       type: bind
    #       source: /var/lib/example
    #       options:
    #         - bind
    #         - rshared
    #         - rw

    # # The `extraConfig` field is used to provide kubelet configuration overrides.
    extraConfig:
      serverTLSBootstrap: true

    # # The `nodeIP` field is used to configure `--node-ip` flag for the kubelet.
    # nodeIP:
    #     # The `validSubnets` field configures the networks to pick kubelet node IP from.
    #     validSubnets:
    #         - 10.0.0.0/8
    #         - '!10.0.0.3/32'
    #         - fdc7::/16
  # Provides machine specific network configuration options.
  network:
    hostname: smith
    # # `interfaces` is used to define the network interface configuration.
    interfaces:
      - interface: eth0 # The interface name.
        # Assigns static IP addresses to the interface.
        addresses:
          - 192.168.0.110/24
        # A list of routes associated with the interface.
        routes:
          - network: 0.0.0.0/0 # The route's network (destination).
            gateway:
              192.168.0.1 # The route's gateway (if empty, creates link scope route).
              # metric: 1024 # The optional metric for the route.
    #   mtu: 1500 # The interface's MTU.
  #
  #       # # Bond specific options.
  #       # bond:
  #       #     # The interfaces that make up the bond.
  #       #     interfaces:
  #       #         - eth0
  #       #         - eth1
  #       #     mode: 802.3ad # A bond option.
  #       #     lacpRate: fast # A bond option.

  #       # # Indicates if DHCP should be used to configure the interface.
  #       # dhcp: true

  #       # # DHCP specific options.
  #       # dhcpOptions:
  #       #     routeMetric: 1024 # The priority of all routes received via DHCP.

  #       # # Wireguard specific configuration.

  #       # # wireguard server example
  #       # wireguard:
  #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
  #       #     listenPort: 51111 # Specifies a device's listening port.
  #       #     # Specifies a list of peer configurations to apply to a device.
  #       #     peers:
  #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.
  #       #           endpoint: 192.168.1.3 # Specifies the endpoint of this peer entry.
  #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
  #       #           allowedIPs:
  #       #             - 192.168.1.0/24
  #       # # wireguard peer example
  #       # wireguard:
  #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
  #       #     # Specifies a list of peer configurations to apply to a device.
  #       #     peers:
  #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.
  #       #           endpoint: 192.168.1.2 # Specifies the endpoint of this peer entry.
  #       #           persistentKeepaliveInterval: 10s # Specifies the persistent keepalive interval for this peer.
  #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
  #       #           allowedIPs:
  #       #             - 192.168.1.0/24

  #       # # Virtual (shared) IP address configuration.
  #       # vip:
  #       #     ip: 172.16.199.55 # Specifies the IP address to be used.

  # # Used to statically set the nameservers for the machine.
  # nameservers:
  #     - 8.8.8.8
  #     - 1.1.1.1

  # # Allows for extra entries to be added to the `/etc/hosts` file
  # extraHostEntries:
  #     - ip: 192.168.1.100 # The IP of the host.
  #       # The host alias.
  #       aliases:
  #         - example
  #         - example.domain.tld

  # # Configures KubeSpan feature.
  # kubespan:
  #     enabled: true # Enable the KubeSpan feature.

  # Used to provide instructions for installations.
  install:
    disk: /dev/sda # The disk used for installations.
    image: ghcr.io/siderolabs/installer:v1.0.4 # Allows for supplying the image used to perform the installation.
    bootloader: true # Indicates if a bootloader should be installed.
    wipe: false # Indicates if the installation disk should be wiped at installation time.
    extraKernelArgs:
      - talos.platform=metal
      - talos.board=rpi_4

    # # Look up disk using disk attributes like model, size, serial and others.
    # diskSelector:
    #     size: 4GB # Disk size.
    #     model: WDC* # Disk model `/sys/block/<dev>/device/model`.
    #     busPath: /pci0000:00/0000:00:17.0/ata1/host0/target0:0:0/0:0:0:0 # Disk bus path.

    # # Allows for supplying extra kernel args via the bootloader.
    # extraKernelArgs:
    #     - talos.platform=metal
    #     - reboot=k

    # # Allows for supplying additional system extension images to install on top of base Talos image.
    # extensions: ghcr.io/siderolabs/gvisor:20220117.0-v1.0.0
  # Features describe individual Talos features that can be switched on or off.
  features:
    rbac: true # Enable role-based access control (RBAC).

  # # Provides machine specific control plane configuration options.

  # # ControlPlane definition example.
  # controlPlane:
  #     # Controller manager machine specific configuration options.
  #     controllerManager:
  #         disabled: false # Disable kube-controller-manager on the node.
  #     # Scheduler machine specific configuration options.
  #     scheduler:
  #         disabled: true # Disable kube-scheduler on the node.

  # # Used to provide static pod definitions to be run by the kubelet directly bypassing the kube-apiserver.

  # # nginx static pod.
  # pods:
  #     - apiVersion: v1
  #       kind: pod
  #       metadata:
  #         name: nginx
  #       spec:
  #         containers:
  #             - image: nginx
  #               name: nginx

  # # Used to partition, format and mount additional disks.

  # # MachineDisks list example.
  # disks:
  #     - device: /dev/sdb # The name of the disk to use.
  #       # A list of partitions to create on the disk.
  #       partitions:
  #         - mountpoint: /var/mnt/extra # Where to mount the partition.
  #
  #           # # The size of partition: either bytes or human readable representation. If `size:` is omitted, the partition is sized to occupy the full disk.

  #           # # Human readable representation.
  #           # size: 100 MB
  #           # # Precise value in bytes.
  #           # size: 1073741824

  # # Allows the addition of user specified files.

  # # MachineFiles usage example.
  # files:
  #     - content: '...' # The contents of the file.
  #       permissions: 0o666 # The file's permissions in octal.
  #       path: /tmp/file.txt # The path of the file.
  #       op: append # The operation to use

  # # The `env` field allows for the addition of environment variables.

  # # Environment variables definition examples.
  # env:
  #     GRPC_GO_LOG_SEVERITY_LEVEL: info
  #     GRPC_GO_LOG_VERBOSITY_LEVEL: "99"
  #     https_proxy: http://SERVER:PORT/
  # env:
  #     GRPC_GO_LOG_SEVERITY_LEVEL: error
  #     https_proxy: https://USERNAME:PASSWORD@SERVER:PORT/
  # env:
  #     https_proxy: http://DOMAIN\USERNAME:PASSWORD@SERVER:PORT/

  # # Used to configure the machine's time settings.

  # # Example configuration for cloudflare ntp server.
  # time:
  #     disabled: false # Indicates if the time service is disabled for the machine.
  #     # Specifies time (NTP) servers to use for setting the system time.
  #     servers:
  #         - time.cloudflare.com
  #     bootTimeout: 2m0s # Specifies the timeout when the node time is considered to be in sync unlocking the boot sequence.

  # # Used to configure the machine's sysctls.

  # # MachineSysctls usage example.
  # sysctls:
  #     kernel.domainname: talos.dev
  #     net.ipv4.ip_forward: "0"

  # # Used to configure the machine's sysfs.

  # # MachineSysfs usage example.
  # sysfs:
  #     devices.system.cpu.cpu0.cpufreq.scaling_governor: performance

  # # Used to configure the machine's container image registry mirrors.
  # registries:
  #     # Specifies mirror configuration for each registry.
  #     mirrors:
  #         ghcr.io:
  #             # List of endpoints (URLs) for registry mirrors to use.
  #             endpoints:
  #                 - https://registry.insecure
  #                 - https://ghcr.io/v2/
  #     # Specifies TLS & auth configuration for HTTPS image registries.
  #     config:
  #         registry.insecure:
  #             # The TLS configuration for the registry.
  #             tls:
  #                 insecureSkipVerify: true # Skip TLS server certificate verification (not recommended).
  #
  #                 # # Enable mutual TLS authentication with the registry.
  #                 # clientIdentity:
  #                 #     crt: TFMwdExTMUNSVWRKVGlCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2sxSlNVSklla05DTUhGLi4u
  #                 #     key: TFMwdExTMUNSVWRKVGlCRlJESTFOVEU1SUZCU1NWWkJWRVVnUzBWWkxTMHRMUzBLVFVNLi4u
  #
  #             # # The auth configuration for this registry.
  #             # auth:
  #             #     username: username # Optional registry authentication.
  #             #     password: password # Optional registry authentication.

  # # Machine system disk encryption configuration.
  # systemDiskEncryption:
  #     # Ephemeral partition encryption.
  #     ephemeral:
  #         provider: luks2 # Encryption provider to use for the encryption.
  #         # Defines the encryption keys generation and storage method.
  #         keys:
  #             - # Deterministically generated key from the node UUID and PartitionLabel.
  #               nodeID: {}
  #               slot: 0 # Key slot number for LUKS2 encryption.
  #
  #         # # Cipher kind to use for the encryption. Depends on the encryption provider.
  #         # cipher: aes-xts-plain64

  #         # # Defines the encryption sector size.
  #         # blockSize: 4096

  #         # # Additional --perf parameters for the LUKS2 encryption.
  #         # options:
  #         #     - no_read_workqueue
  #         #     - no_write_workqueue

  # # Configures the udev system.
  # udev:
  #     # List of udev rules to apply to the udev system
  #     rules:
  #         - SUBSYSTEM=="drm", KERNEL=="renderD*", GROUP="44", MODE="0660"

  # # Configures the logging system.
  # logging:
  #     # Logging destination.
  #     destinations:
  #         - endpoint: tcp://1.2.3.4:12345 # Where to send logs. Supported protocols are "tcp" and "udp".
  #           format: json_lines # Logs format.

  # # Configures the kernel.
  # kernel:
  #     # Kernel modules to load.
  #     modules:
  #         - name: brtfs # Module name.
# Provides cluster specific configuration options.
cluster:
  id: s6sPcsjiVWeeNxtEuwnG3qK_G66jryy2m97wfMDbQgY= # Globally unique identifier for this cluster (base64 encoded random 32 bytes).
  secret: 3yV/4rdBYiZA5llr0Y+g1pfxSO1GeX9ngnsur8x9IJI= # Shared secret of cluster (base64 encoded random 32 bytes).
  # Provides control plane specific configuration options.
  controlPlane:
    endpoint: https://192.168.0.110:6443 # Endpoint is the canonical controlplane endpoint, which can be an IP address or a DNS hostname.
  clusterName: matrix # Configures the cluster's name.
  # Provides cluster specific network configuration options.
  network:
    dnsDomain: cluster.local # The domain used by Kubernetes DNS.
    # The pod subnet CIDR.
    podSubnets:
      - 10.244.0.0/16
    # The service subnet CIDR.
    serviceSubnets:
      - 10.96.0.0/12

    # # The CNI used.
    # cni:
    #     name: custom # Name of CNI to use.
    #     # URLs containing manifests to apply for the CNI.
    #     urls:
    #         - https://docs.projectcalico.org/archive/v3.20/manifests/canal.yaml
  token: x9qu3x.y6np824fsay15wld # The [bootstrap token](https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/) used to join the cluster.
  aescbcEncryptionSecret: C/3Wn2WD+6vYxHHw1dg4TTLQwwzmipnkkNLMGwOXDQc= # The key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).
  # The base64 encoded root certificate authority used by Kubernetes.
  ca:
    crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpVENDQVMrZ0F3SUJBZ0lRVlpIZC9paEl5Vk9sTlV5SWNLaWk0akFLQmdncWhrak9QUVFEQWpBVk1STXcKRVFZRFZRUUtFd3ByZFdKbGNtNWxkR1Z6TUI0WERUSXlNRFV4TXpFM01UZzFNMW9YRFRNeU1EVXhNREUzTVRnMQpNMW93RlRFVE1CRUdBMVVFQ2hNS2EzVmlaWEp1WlhSbGN6QlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VICkEwSUFCT2xmV1k2MUlMTUVaSERET29UUFFtNjZCWGRFeVlVVm43SXJMcTZVRW03eXJQWHE4ekVGZkxkeTRCTmEKK1FoK2VJYkZpZHBZYjZORVJPZnBLWWFKd1oyallUQmZNQTRHQTFVZER3RUIvd1FFQXdJQ2hEQWRCZ05WSFNVRQpGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFCkZnUVVsdEthelg4MnV0VDkrSUlocVdiQU5DY0hBNTB3Q2dZSUtvWkl6ajBFQXdJRFNBQXdSUUlnQmJLK0NHYnoKVTVHbWt6MUVCUW1uZ1lya3pHU0t3RVFEZEEyVjJnWG84TTRDSVFDMWRKRHp5enVjdUtTZEcwMk1hZnJFbG5lRQpKUmVWMlJ5blg0Zm9PaE1vMWc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUR5WCt1UmNhT0VJbmo2Qkk2bEVXMHNqcGljbHRGV2J1cFo5OFQwUlp3TWNvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFNlY5WmpyVWdzd1JrY01NNmhNOUNicm9GZDBUSmhSV2ZzaXN1cnBRU2J2S3M5ZXJ6TVFWOAp0M0xnRTFyNUNINTRoc1dKMmxodm8wUkU1K2twaG9uQm5RPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
  # The base64 encoded aggregator certificate authority used by Kubernetes for front-proxy certificate generation.
  aggregatorCA:
    crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJYekNDQVFXZ0F3SUJBZ0lRVzlkbXJ6SkRGMFYxb1J5bU1XbSswekFLQmdncWhrak9QUVFEQWpBQU1CNFgKRFRJeU1EVXhNekUzTVRnMU0xb1hEVE15TURVeE1ERTNNVGcxTTFvd0FEQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxRwpTTTQ5QXdFSEEwSUFCT2hpV1ozYVdYK3hjckFEbHkrRnBIdFphTXYzNFRyVUlVSW1VVlJrWjArZkdTVitUbFJhCk1HTGNVREhHbTE5NWZGamVyQzArVWNwWnhLcmN0cFpWRHdTallUQmZNQTRHQTFVZER3RUIvd1FFQXdJQ2hEQWQKQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZApCZ05WSFE0RUZnUVVlNkVXeVc5cmdNUThSUXNkMTJ0TlpGN2lQTFV3Q2dZSUtvWkl6ajBFQXdJRFNBQXdSUUloCkFQeC9ZVUw4MHZ1Ui9zSWh1VitFV2N5elRsUlhNMGJ0QUNPb0Z2Z2Z3SEtXQWlBYW5WRmlNeU0zaGZJZk40clUKYVhOam05T0VDYnNQMVhzYnFzR3RTc0VQUnc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUl6NHRBRWJlSVl6YnJDRmk2ZzNmMWJyTkJveGtrRW8rdTNzcERFZldqd0xvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFNkdKWm5kcFpmN0Z5c0FPWEw0V2tlMWxveS9maE90UWhRaVpSVkdSblQ1OFpKWDVPVkZvdwpZdHhRTWNhYlgzbDhXTjZzTFQ1UnlsbkVxdHkybGxVUEJBPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
  # The base64 encoded private key for service account token generation.
  serviceAccount:
    key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSU9KNVh2TGxVOWJET1JJVU8zZml6dHlEeVJjbk8xRlFPY0grQnJQTk82Y3hvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFQ3RUNzJwSkg5QmMxaS80cnkyVkp2YmpYYWNxelZWa0RzQ0ZQRU9RcU9jLzBRclIva1g3MQo4ZGR5QmZvKytrSkprSklXV08vcmVjWDBHQzYyMGt3cVpBPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
  # API server specific configuration options.
  apiServer:
    image: k8s.gcr.io/kube-apiserver:v1.22.9 # The container image used in the API server manifest.
    # Extra certificate subject alternative names for the API server's certificate.
    certSANs:
      - 192.168.0.110
    disablePodSecurityPolicy: true # Disable PodSecurityPolicy in the API server and default manifests.

    # # Configure the API server admission plugins.
    # admissionControl:
    #     - name: PodSecurity # Name is the name of the admission controller.
    #       # Configuration is an embedded configuration object to be used as the plugin's
    #       configuration:
    #         apiVersion: pod-security.admission.config.k8s.io/v1alpha1
    #         defaults:
    #             audit: restricted
    #             audit-version: latest
    #             enforce: baseline
    #             enforce-version: latest
    #             warn: restricted
    #             warn-version: latest
    #         exemptions:
    #             namespaces:
    #                 - kube-system
    #             runtimeClasses: []
    #             usernames: []
    #         kind: PodSecurityConfiguration
  # Controller manager server specific configuration options.
  controllerManager:
    image: k8s.gcr.io/kube-controller-manager:v1.22.9 # The container image used in the controller manager manifest.
  # Kube-proxy server-specific configuration options
  proxy:
    image: k8s.gcr.io/kube-proxy:v1.22.9 # The container image used in the kube-proxy manifest.
  # Scheduler server specific configuration options.
  scheduler:
    image: k8s.gcr.io/kube-scheduler:v1.22.9 # The container image used in the scheduler manifest.
  # Configures cluster member discovery.
  discovery:
    enabled: true # Enable the cluster membership discovery feature.
    # Configure registries used for cluster member discovery.
    registries:
      # Kubernetes registry uses Kubernetes API server to discover cluster members and stores additional information
      kubernetes: {}
      # Service registry is using an external service to push and pull information about cluster members.
      service: {}
      # # External service endpoint.
      # endpoint: https://discovery.talos.dev/
  # Etcd specific configuration options.
  etcd:
    # The `ca` is the root certificate authority of the PKI.
    ca:
      crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJmVENDQVNPZ0F3SUJBZ0lRRVdBMy9jaS9aWHN1Q2szbStwSnpjakFLQmdncWhrak9QUVFEQWpBUE1RMHcKQ3dZRFZRUUtFd1JsZEdOa01CNFhEVEl5TURVeE16RTNNVGcxTTFvWERUTXlNRFV4TURFM01UZzFNMW93RHpFTgpNQXNHQTFVRUNoTUVaWFJqWkRCWk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMElBQk9mMkJEN2dLQmRyClY0NUEzSUtZK2RJV2EwQ1IyS3FHeXExV2NUNHhhdXRwNWh2ZmtMTEEvemFWRVhJZjZrc0IzQkRwU0hKREMydGQKYUZLOWlTSnBiY0dqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjRApBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVZnhLVnV1ekVtNlNUCndnOFdRakVwLzNoNmxUWXdDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBTXRyYlFqaGlWb21JalV2eGdlR3o5dkUKZXBMSkw5RzNJRW1POTA3MUlSOG1BaUEyMmtkOHI3YWxoR1l2RlJrZUZJMGdqL2ExNm5wQWZONjUrejVackc2ZQpuQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
      key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUJjdFlzb1pvL05BZC9ZTzU3V2xHWUR0WnJPUmhyWGZWWEdSU1pVYkxvVVJvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFNS9ZRVB1QW9GMnRYamtEY2dwajUwaFpyUUpIWXFvYktyVlp4UGpGcTYybm1HOStRc3NELwpOcFVSY2gvcVN3SGNFT2xJY2tNTGExMW9VcjJKSW1sdHdRPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=

    # # The container image used to create the etcd service.
    # image: gcr.io/etcd-development/etcd:v3.5.3-arm64

    # # The subnet from which the advertise URL should be.
    # subnet: 10.0.0.0/8
  # A list of urls that point to additional manifests.
  extraManifests: []
  #   - https://www.example.com/manifest1.yaml
  #   - https://www.example.com/manifest2.yaml

  # A list of inline Kubernetes manifests.
  inlineManifests: []
  #   - name: namespace-ci # Name of the manifest.
  #     contents: |- # Manifest contents as a string.
  #       apiVersion: v1
  #       kind: Namespace
  #       metadata:
  #       	name: ci

  # # Core DNS specific configuration options.
  # coreDNS:
  #     image: docker.io/coredns/coredns:1.9.1 # The `image` field is an override to the default coredns image.

  # # External cloud provider configuration.
  # externalCloudProvider:
  #     enabled: true # Enable external cloud provider.
  #     # A list of urls that point to additional manifests for an external cloud provider.
  #     manifests:
  #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/rbac.yaml
  #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/aws-cloud-controller-manager-daemonset.yaml

  # # A map of key value pairs that will be added while fetching the extraManifests.
  # extraManifestHeaders:
  #     Token: "1234567"
  #     X-ExtraInfo: info

  # # Settings for admin kubeconfig generation.
  # adminKubeconfig:
  #     certLifetime: 1h0m0s # Admin kubeconfig certificate lifetime (default is 1 year).
